#!/bin/bash
# This script aim to replace the tripleo-ci script (toci_*) which are
# linked to the infra (ovb or osinfra)
# The goal here, is to be able to run the tripleo-ci script for debuging CI
# as closes as possible to the real run.
# The 1st issue with this kind of approach is the divergences that can happen
# between this script and the toci_* scripts.
# This script use and doesn't modify the current tripleo-ci script:
# tripleo.sh / deploy.sh and all the satelite scripts.
# TODO:
#  * manage the number of nodes
#  * manage Zuul variables
set -eux
set -o pipefail
# Job name
#JOB_NAME=$1
JOB_NAME={{ job_name }}
TOCI_JOBTYPE={{ job_name }}
# Tripleo Root:
TRIPLEO_ROOT=/home/stack
# Export default CI variables:
#export http_proxy=${http_proxy-"http://192.168.1.100:3128/"}
#export GEARDSERVER=${TEBROKERIP-192.168.1.1}
#export MIRRORSERVER=${MIRRORIP-192.168.1.101}
export CACHEUPLOAD=0
export INTROSPECT=0
export NODECOUNT=2
export PACEMAKER=0
export UNDERCLOUD_MAJOR_UPGRADE=0
export OVERCLOUD_MAJOR_UPGRADE=0
export OVERCLOUD_MINOR_UPGRADE=0
export FULL_MAJOR_UPGRADE=0
export MAJOR_UPGRADE=0
export OVERCLOUD=1
OVERCLOUD_DEPLOY_TIMEOUT=90
export OVERCLOUD_SSH_USER=${OVERCLOUD_SSH_USER:-"jenkins"}
export OVERCLOUD_DEPLOY_ARGS=${OVERCLOUD_DEPLOY_ARGS:-""}
export OVERCLOUD_DEPLOY_ARGS="$OVERCLOUD_DEPLOY_ARGS --libvirt-type=qemu -t $OVERCLOUD_DEPLOY_TIMEOUT"
export OVERCLOUD_UPDATE_ARGS=
export OVERCLOUD_PINGTEST_ARGS="--skip-pingtest-cleanup"
export UNDERCLOUD_SSL=0
export UNDERCLOUD_IDEMPOTENT=0
export UNDERCLOUD_SANITY_CHECK=0
export TRIPLEO_SH_ARGS=
export NETISO_V4=0
export NETISO_V6=0
export RUN_PING_TEST=1
export RUN_TEMPEST_TESTS=0
export OVB=0
export UCINSTANCEID=NULL
#export TOCIRUNNER="./toci_instack_ovb.sh"
export MULTINODE=0
# Whether or not we run TripleO using OpenStack Infra nodes
export OSINFRA=0
export CONTROLLER_HOSTS=
export COMPUTE_HOSTS=
export SUBNODES_SSH_KEY=
export TEST_OVERCLOUD_DELETE=0
export FULL_UPGRADE=0
export STABLE_RELEASE=
export WORKSPACE=$PWD
export MIRRORSERVER=
export CENTOS_MIRROR=
export http_proxy=
export PINGTEST_TEMPLATE=
export UPGRADE_VERSION=
# Parse JOB_NAME and attribute variables:
for JOB_TYPE_PART in $(sed 's/-/ /g' <<< "${JOB_NAME:-}") ; do
    case $JOB_TYPE_PART in
        updates)
            OVERCLOUD_MINOR_UPGRADE=1
            if [ $JOB_NAME == 'ovb-updates' ] ; then
                NODECOUNT=3
                OVERCLOUD_DEPLOY_ARGS="$OVERCLOUD_DEPLOY_ARGS -e /usr/share/openstack-tripleo-heat-templates/environments/puppet-pacemaker.yaml --ceph-storage-scale 1 -e /usr/share/openstack-tripleo-heat-templates/environments/network-isolation-v6.yaml -e $TRIPLEO_ROOT/tripleo-ci/test-environments/ipv6-network-templates/network-environment.yaml -e $TRIPLEO_ROOT/tripleo-ci/test-environments/net-iso.yaml -e /usr/share/openstack-tripleo-heat-templates/environments/storage-environment.yaml"
                OVERCLOUD_UPDATE_ARGS="-e /usr/share/openstack-tripleo-heat-templates/overcloud-resource-registry-puppet.yaml $OVERCLOUD_DEPLOY_ARGS"
                NETISO_V6=1
                PACEMAKER=1
            elif [ $JOB_NAME == 'nonha-multinode-updates' ] ; then
                OVERCLOUD_UPDATE_ARGS="-e /usr/share/openstack-tripleo-heat-templates/overcloud-resource-registry-puppet.yaml $OVERCLOUD_DEPLOY_ARGS"
            fi
            ;;
        upgrades)
            export STABLE_RELEASE=mitaka
            UPGRADE_VERSION=newton
            MAJOR_UPGRADE=1
            if [ $JOB_NAME == 'undercloud-upgrades' ] ; then
                UNDERCLOUD_MAJOR_UPGRADE=1
                export UNDERCLOUD_SANITY_CHECK=1
                # We want to start by installing an Undercloud from the
                # previous stable release.
                if [ "$STABLE_RELEASE" = "newton" ]; then
                    STABLE_RELEASE=mitaka
                elif [ -z $STABLE_RELEASE ]; then
                    STABLE_RELEASE=newton
                fi
            elif [ $JOB_NAME == 'ovb-nonha-upgrades' ] ; then
                UNDERCLOUD_MAJOR_UPGRADE=1
                OVERCLOUD_MAJOR_UPGRADE=1
                OVERCLOUD_DEPLOY_ARGS=" -e /usr/share/openstack-tripleo-heat-templates/overcloud-resource-registry-puppet.yaml -e /usr/share/openstack-tripleo-heat-templates/environments/puppet-pacemaker.yaml -e $TRIPLEO_ROOT/tripleo-ci/test-environments/neutronl3ha.yaml $OVERCLOUD_DEPLOY_ARGS"
                PACEMAKER=1
                UNDERCLOUD_SSL=0
                export UNDERCLOUD_SANITY_CHECK=0
            fi
            ;;
        ha)
            NODECOUNT=4
            # In ci our overcloud nodes don't have access to an external netwrok
            # --ntp-server is here to make the deploy command happy, the ci env
            # is on virt so the clocks should be in sync without it.
            OVERCLOUD_DEPLOY_ARGS="$OVERCLOUD_DEPLOY_ARGS --control-scale 3 --ntp-server 0.centos.pool.ntp.org -e /usr/share/openstack-tripleo-heat-templates/environments/puppet-pacemaker.yaml -e /usr/share/openstack-tripleo-heat-templates/environments/network-isolation.yaml -e $TRIPLEO_ROOT/tripleo-ci/test-environments/network-templates/network-environment.yaml -e $TRIPLEO_ROOT/tripleo-ci/test-environments/net-iso.yaml"
            NETISO_V4=1
            PACEMAKER=1
            ;;
        nonha)
            if [[ "${STABLE_RELEASE}" =~ ^(liberty|mitaka)$ ]] ; then
                ENDPOINT_LIST_LOCATION=$TRIPLEO_ROOT/tripleo-ci/test-environments
                CA_ENVIRONMENT_FILE=inject-trust-anchor.yaml
            else
                ENDPOINT_LIST_LOCATION=/usr/share/openstack-tripleo-heat-templates/environments
                CA_ENVIRONMENT_FILE=inject-trust-anchor-hiera.yaml
            fi
            if [[ ! "$JOB_NAME" =~ "upgrades" ]] ; then
                OVERCLOUD_DEPLOY_ARGS="$OVERCLOUD_DEPLOY_ARGS -e $TRIPLEO_ROOT/tripleo-ci/test-environments/enable-tls.yaml -e $ENDPOINT_LIST_LOCATION/tls-endpoints-public-ip.yaml -e $TRIPLEO_ROOT/tripleo-ci/test-environments/$CA_ENVIRONMENT_FILE --ceph-storage-scale 1 -e /usr/share/openstack-tripleo-heat-templates/environments/puppet-ceph-devel.yaml"
                INTROSPECT=1
                NODECOUNT=3
                UNDERCLOUD_SSL=1
            fi
            ;;
        containers)
            # TODO : remove this when the containers job is passing again
            exit 1
            TRIPLEO_SH_ARGS="--use-containers"
            ;;
        ovb)
            OVB=0
            ;;
        ipv6)
            NETISO_V4=0
            NETISO_V6=1
            OVERCLOUD_DEPLOY_ARGS="$OVERCLOUD_DEPLOY_ARGS  -e /usr/share/openstack-tripleo-heat-templates/environments/network-isolation-v6.yaml -e $TRIPLEO_ROOT/tripleo-ci/test-environments/ipv6-network-templates/network-environment.yaml"
            ;;
        multinode)
            MULTINODE=1
            NODECOUNT=1
            PACEMAKER=1
            OSINFRA=1

            CONTROLLER_HOSTS=$(sed -n 1,1p /etc/nodepool/sub_nodes)
            SUBNODES_SSH_KEY=/etc/nodepool/id_rsa
            UNDERCLOUD_SSL=0
            INTROSPECT=0
            OVERCLOUD_DEPLOY_ARGS="--libvirt-type=qemu -t $OVERCLOUD_DEPLOY_TIMEOUT"
            OVERCLOUD_DEPLOY_ARGS="$OVERCLOUD_DEPLOY_ARGS -e /usr/share/openstack-tripleo-heat-templates/environments/deployed-server-environment.yaml -e $TRIPLEO_ROOT/tripleo-ci/test-environments/$MULTINODE_ENV_NAME.yaml --compute-scale 0 --overcloud-ssh-user $OVERCLOUD_SSH_USER"
            ;;
        undercloud)
            TOCIRUNNER="./toci_instack_osinfra.sh"
            NODECOUNT=0
            OVERCLOUD=0
            OSINFRA=1
            RUN_PING_TEST=0
            INTROSPECT=0
            UNDERCLOUD_SSL=1
            export UNDERCLOUD_SANITY_CHECK=1
            ;;
        periodic)
            export DELOREAN_REPO_URL=http://trunk.rdoproject.org/centos7/consistent
            CACHEUPLOAD=1
            OVERCLOUD_PINGTEST_ARGS=
            ;;
        liberty|mitaka)
            # This is handled in tripleo.sh (it always uses centos7-$STABLE_RELEASE/current)
            # where $STABLE_RELEASE is derived in toci_instack.sh
            unset DELOREAN_REPO_URL
            ;;
        tempest)
            export RUN_TEMPEST_TESTS=1
            export RUN_PING_TEST=0
            ;;
    esac
done

sudo yum install -y epel-release
sudo yum install -y moreutils

if [ ! -f "/etc/ironic/ironic.conf.oooq" ]; then
    sudo cp /etc/ironic/ironic.conf /etc/ironic/ironic.conf.oooq;
    # newton
    sudo sed -i 's/#libvirt_uri = qemu:\/\/\/system/libvirt_uri = qemu:\/\/\/session/g' /etc/ironic/ironic.conf;
    # liberty, mitaka
    sudo sed -i 's/#libvirt_uri=qemu:\/\/\/system/libvirt_uri=qemu:\/\/\/session/g' /etc/ironic/ironic.conf;
    sudo systemctl restart openstack-ironic-conductor.service;
fi


source $TRIPLEO_ROOT/tripleo-ci/scripts/common_vars.bash
source $TRIPLEO_ROOT/tripleo-ci/scripts/common_functions.sh
source $TRIPLEO_ROOT/tripleo-ci/scripts/metrics.bash
start_metric "tripleo.ci.total.seconds"

mkdir -p $WORKSPACE/logs
export IP_DEVICE=${IP_DEVICE:-"eth0"}
MY_IP=$(ip addr show dev $IP_DEVICE | awk '/inet / {gsub("/.*", "") ; print $2}')

# TODO: Set undercloud_hostname in undercloud.conf
hostname | sudo dd of=/etc/hostname
echo "127.0.0.1 $(hostname) $(hostname).openstacklocal" | sudo tee -a /etc/hosts

# TODO: xfsprogs should be a dep of DIB?
sudo yum install -y xfsprogs

# Remove the anything on the infra image template that might interfere with CI
sudo yum remove -y puppet hiera puppetlabs-release rdo-release
sudo rm -rf /etc/puppet /etc/hiera.yaml

undercloud_net_range="192.0.2."
undercloud_services_ip=$undercloud_net_range"1"
undercloud_haproxy_public_ip=$undercloud_net_range"2"
undercloud_haproxy_admin_ip=$undercloud_net_range"3"
export no_proxy=$undercloud_services_ip,$undercloud_haproxy_public_ip,$undercloud_haproxy_admin_ip,$MY_IP,$MIRRORSERVER


# Setup delorean
if [[ $ZUUL_BRANCH =~ ^master ]] && [ $MAJOR_UPGRADE == 1 ]; then
    # Setup dummy ci repo, only if we are gating stable branch
    # And deploy a stable mitaka if we are gating master
    STABLE_RELEASE="mitaka"
    export DELOREAN_STABLE_REPO_URL=http://trunk.rdoproject.org/centos7-$STABLE_RELEASE/current-passed-ci/
    export DELOREAN_REPO_URL=http://trunk.rdoproject.org/centos7-$STABLE_RELEASE/current-passed-ci/
    $TRIPLEO_ROOT/tripleo-ci/scripts/tripleo.sh --delorean-setup
else
    $TRIPLEO_ROOT/tripleo-ci/scripts/tripleo.sh --delorean-setup
    dummy_ci_repo
fi

# Install all of the repositories we need
$TRIPLEO_ROOT/tripleo-ci/scripts/tripleo.sh --repo-setup

# Install some useful/necessary packages
sudo yum -y install wget python-simplejson yum-plugin-priorities qemu-img

if ! [[ $ZUUL_BRANCH =~ ^master ]] && [ $MAJOR_UPGRADE == 1 ]; then
    delorean_build_and_serve
    # Since we've moved a few commands from this spot before the wget, we need to
    # sleep a few seconds in order for the SimpleHTTPServer to get setup.
    sleep 3
    layer_ci_repo
fi

echo_vars_to_deploy_env

source $TRIPLEO_ROOT/tripleo-ci/deploy.env

# Install our test cert so SSL tests work
sudo cp $TRIPLEO_ROOT/tripleo-ci/test-environments/overcloud-cacert.pem /etc/pki/ca-trust/source/anchors/
sudo update-ca-trust extract
$TRIPLEO_ROOT/tripleo-ci/scripts/deploy.sh
echo 'Run completed.'
